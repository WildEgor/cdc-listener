// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package pkg

import (
	"github.com/WildEgor/cdc-listener/internal/adapters/listener"
	"github.com/WildEgor/cdc-listener/internal/adapters/publisher"
	"github.com/WildEgor/cdc-listener/internal/configs"
	"github.com/WildEgor/cdc-listener/internal/db/mongodb"
	"github.com/WildEgor/cdc-listener/internal/handlers/errors"
	"github.com/WildEgor/cdc-listener/internal/handlers/health_check"
	"github.com/WildEgor/cdc-listener/internal/handlers/ready_check"
	"github.com/WildEgor/cdc-listener/internal/repositories"
	"github.com/WildEgor/cdc-listener/internal/routers"
	"github.com/google/wire"
)

// Injectors from server.go:

func NewServer() (*Server, error) {
	configurator := configs.NewConfigurator()
	appConfig := configs.NewAppConfig(configurator)
	errorsHandler := error_handler.NewErrorsHandler()
	healthCheckHandler := health_check_handler.NewHealthCheckHandler()
	readyCheckHandler := ready_check_handler.NewReadyCheckHandler()
	publicRouter := routers.NewPublicRouter(healthCheckHandler, readyCheckHandler)
	swaggerRouter := routers.NewSwaggerRouter()
	publisherConfig := configs.NewPublisherConfig(configurator)
	eventPublisherAdapter := publisher.NewEventPublisherAdapter(publisherConfig)
	mongoConfig := configs.NewMongoConfig(configurator)
	mongoConnection := mongodb.NewMongoConnection(mongoConfig)
	cdcRepository := repositories.NewCDCRepository(mongoConnection)
	listenerConfig := configs.NewListenerConfig(configurator)
	resumeTokenSaver := listener.NewResumeStore()
	listenerListener := listener.NewListener(eventPublisherAdapter, cdcRepository, listenerConfig, resumeTokenSaver)
	server := NewApp(appConfig, errorsHandler, publicRouter, swaggerRouter, listenerListener)
	return server, nil
}

// server.go:

var ServerSet = wire.NewSet(AppSet)
